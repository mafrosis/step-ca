FROM nginx:alpine AS builder

ENV NGINX_VERSION 1.19.1

RUN wget "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" -O nginx.tar.gz && \
	wget "https://github.com/flant/nginx-http-rdns/archive/master.zip" -O nginx-http-rdns.zip

# https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/Dockerfile
RUN apk add --no-cache --virtual .build-deps \
	gcc \
	libc-dev \
	make \
	openssl-dev \
	pcre-dev \
	zlib-dev \
	linux-headers \
	curl \
	gnupg \
	libxslt-dev \
	gd-dev \
	geoip-dev

# Reuse same cli arguments as the nginx:alpine image
RUN CONFARGS=$(nginx -V 2>&1 | sed -n -e 's/^.*arguments: //p') \
	mkdir /usr/src && \
		tar -zxC /usr/src -f nginx.tar.gz && \
	unzip nginx-http-rdns.zip && \
	HTTP_RDNS_DIR="$(pwd)/nginx-http-rdns-master" && \
	cd /usr/src/nginx-$NGINX_VERSION && \
	./configure --with-compat $CONFARGS --add-dynamic-module=$HTTP_RDNS_DIR && \
	make modules && \
	mv ./objs/*.so /

# Download and extract Smallstep CLI
RUN curl -o /tmp/step.tgz -L https://github.com/smallstep/cli/releases/download/v0.15.13/step_linux_0.15.13_amd64.tar.gz && \
	tar xzf /tmp/step.tgz --strip-components=1 -C /tmp


FROM nginx:1.19-alpine

COPY --from=builder /ngx_http_rdns_module.so /usr/local/nginx/modules/ngx_http_rdns_module.so
COPY --from=builder /tmp/bin/step /usr/local/bin/step

ENV PATH $PATH:/root/google-cloud-sdk/bin

RUN apk upgrade --update-cache --available && \
	apk add openssl curl python3 py-crcmod bash libc6-compat bind-tools jq && \
	rm -rf /var/cache/apk/*
RUN curl https://sdk.cloud.google.com | bash > /dev/null && \
	gcloud config set component_manager/disable_update_check true

COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY root_ca.crt /root/ca.crt

RUN echo 'load_module /usr/local/nginx/modules/ngx_http_rdns_module.so;' | cat - /etc/nginx/nginx.conf > /tmp/tmp && \
	mv /tmp/tmp /etc/nginx/nginx.conf

ENV PORT 8080
EXPOSE 8080

COPY docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]

CMD ["nginx", "-g", "daemon off;"]
